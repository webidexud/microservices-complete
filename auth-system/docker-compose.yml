services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: auth_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-auth_system}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-auth_system}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth_network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: auth_backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-password123}@postgres:5432/${POSTGRES_DB:-auth_system}
      JWT_SECRET: ${JWT_SECRET:-change-this-super-secret-key-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-15m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      NODE_ENV: ${NODE_ENV:-development}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      PORT: 3000
      DEFAULT_ADMIN_USERNAME: ${DEFAULT_ADMIN_USERNAME:-admin}
      DEFAULT_ADMIN_PASSWORD: ${DEFAULT_ADMIN_PASSWORD:-admin123}
      DEFAULT_ADMIN_EMAIL: ${DEFAULT_ADMIN_EMAIL:-admin@sistema.com}
      DEFAULT_ADMIN_FIRST_NAME: ${DEFAULT_ADMIN_FIRST_NAME:-Administrador}
      DEFAULT_ADMIN_LAST_NAME: ${DEFAULT_ADMIN_LAST_NAME:-Sistema}
      MAX_LOGIN_ATTEMPTS: ${MAX_LOGIN_ATTEMPTS:-5}
      LOCKOUT_TIME: ${LOCKOUT_TIME:-15m}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    networks:
      - auth_network
    restart: unless-stopped

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: auth_frontend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost/api}
      VITE_APP_NAME: ${VITE_APP_NAME:-Auth System}
    ports:
      - "3001:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - auth_network
    restart: unless-stopped

  # Nginx Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: auth_proxy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - auth_network
    restart: unless-stopped


networks:
  auth_network:
    driver: bridge


volumes:
  postgres_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local
