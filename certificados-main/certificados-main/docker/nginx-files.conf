events {
    worker_connections 1024;
}

http {
    # Configuración de upstreams
    upstream admin_backend {
        server admin-service:80;
        keepalive 32;
    }
    
    upstream public_backend {
        server public-service:80;
        keepalive 32;
    }
    
    upstream file_backend {
        server file-service:80;
        keepalive 32;
    }
    
    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Configuración básica
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # Compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/json;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=public:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=5r/s;
    
    # Headers de seguridad globales
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    
    # === SERVIDOR PRINCIPAL ===
    server {
        listen 80;
        server_name localhost certificates.local;
        
        # === PANEL ADMINISTRATIVO ===
        location /admin {
            limit_req zone=admin burst=20 nodelay;
            
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts específicos para admin
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
            
            # Headers adicionales para admin
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Admin-Request "true";
        }
        
        # === ARCHIVOS ESTÁTICOS (CSS, JS, Imágenes) ===
        location /assets {
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            
            # Cache largo para assets
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # === ARCHIVOS DE DATOS ===
        location ~ ^/(uploads|generated|templates)/ {
            proxy_pass http://file_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Cache para archivos
            expires 1d;
            add_header Cache-Control "public";
        }
        
        # === FRONTEND PÚBLICO (RAÍZ) ===
        location / {
            limit_req zone=public burst=50 nodelay;
            
            proxy_pass http://public_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts para público
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 120s;
            
            # Headers adicionales
            proxy_set_header X-Public-Request "true";
        }
        
        # === HEALTH CHECKS ===
        location /health {
            access_log off;
            return 200 "Gateway healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /health/admin {
            access_log off;
            proxy_pass http://admin_backend/health;
        }
        
        location /health/public {
            access_log off;
            proxy_pass http://public_backend/health;
        }
        
        location /health/files {
            access_log off;
            proxy_pass http://file_backend/health;
        }
        
        # === ENDPOINTS ESPECÍFICOS PARA DESCARGA ===
        location /download/ {
            proxy_pass http://file_backend/generated/;
            proxy_set_header Host $host;
            
            # Forzar descarga
            add_header Content-Disposition "attachment";
        }
        
        # === DENEGAR ACCESO A ARCHIVOS SENSIBLES ===
        location ~ /\.(env|git|htaccess|htpasswd) {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(sql|conf|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # === SERVIDOR PARA ADMINISTRADORES (Puerto directo) ===
    server {
        listen 80;
        server_name admin.certificates.local;
        
        location / {
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # === SERVIDOR PARA PÚBLICO (Puerto directo) ===
    server {
        listen 80;
        server_name public.certificates.local;
        
        location / {
            proxy_pass http://public_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}